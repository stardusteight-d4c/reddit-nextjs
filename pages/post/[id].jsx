import React, { useEffect, useState } from 'react'
import Post from '../../components/common/Post'
import { useContext } from 'react'
import { RedditContext } from '../../context/RedditContext'
import Header from '../../components/header'
import { useRouter } from 'next/router'
import Comments from '../../components/commentsSection/Comments'
import SaveComment from '../../components/commentsSection/SaveComment'
import Head from 'next/head'

import { supabase } from '../../services/supabaseClient'

const style = {
  wrapper: 'flex min-h-screen flex-col bg-black text-white',
  container: 'mx-auto flex w-full max-w-5xl flex-1 space-x-6 py-[5rem] px-6',
  containerWrapper: 'w-full space-y-4 lg:w-2/3',
}

/**
 * getStaticPaths is needed to check which routes in post/[id] exist, 
 * otherwise it returns 404.
 */
export async function getStaticPaths() {
  const { data } = await supabase
  .from('feed')
  .select('id')
  // console.log(data[0]);

  const paths = data.map((path) => {
    return { params: { id: path.id.toString() } }
  })
  // console.log('paths', paths)

  return {
    paths: paths,
    fallback: false, // can also be true or 'blocking'
  }
}


// Without getStaticProps, getStaticPaths does nothing
export async function getStaticProps(context) {
  return {
    // Passed to the page component as props
    props: { post: {} },
  }
}

const PostView = () => {
  const router = useRouter()
  const { selectedPost, setSelectedPost } = useContext(RedditContext)
  const id = router.query.id
  // console.log(id)

  useEffect(() => {
    const fetchPost = async () => {
      if (id) {
        const response = await fetch(`/api/get-post?postId=${id}`).then((res) =>
          res.json()
        )
        // console.log(response.data[0])
        if (!selectedPost) setSelectedPost(response.data[0])
      } else {
        return
      }
    }
    fetchPost()
  }, [id])
  // console.log('selectedPost', selectedPost)

  return (
    <>
      {selectedPost ? (
        <div>
          <Head>
            <title>VALORANT | Post from {selectedPost?.author}</title>
            <meta name="description" content="Generated by create next app" />
          </Head>
          <div className={style.wrapper}>
            <Header />
            <div className={style.container}>
              <div className={style.containerWrapper}>
                <Post {...selectedPost} />
                <SaveComment postId={selectedPost?.id} />
                <Comments postId={selectedPost?.id} />
              </div>
            </div>
          </div>
        </div>
      ) : (
        <div>Loading...</div>
      )}
    </>
  )
}

export default PostView
